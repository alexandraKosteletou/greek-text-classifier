diff --git a/.github/workflows/ci.yml b/.github/workflows/ci.yml
new file mode 100644
index 0000000..1111111
--- /dev/null
+++ b/.github/workflows/ci.yml
@@ -0,0 +1,86 @@
+name: CI
+
+on:
+  push:
+  pull_request:
+  workflow_dispatch:
+
+jobs:
+  test:
+    runs-on: ubuntu-latest
+    steps:
+      - uses: actions/checkout@v4
+      - uses: actions/setup-python@v5
+        with:
+          python-version: "3.11"
+      - name: Install dependencies
+        run: |
+          python -m pip install --upgrade pip
+          pip install -r requirements.txt
+          pip install -e .
+      - name: Bootstrap NLTK data
+        run: |
+          python scripts/download_nltk.py
+      - name: Run tests
+        run: pytest -q
+
+  legacy-demos:
+    runs-on: ubuntu-latest
+    steps:
+      - uses: actions/checkout@v4
+      - uses: actions/setup-python@v5
+        with:
+          python-version: "3.11"
+      - name: Install dependencies
+        run: |
+          python -m pip install --upgrade pip
+          pip install -r requirements.txt
+          pip install -e .
+      - name: Bootstrap NLTK data
+        run: |
+          python scripts/download_nltk.py
+      - name: Prepare legacy data
+        run: |
+          mkdir -p data
+          if [ -f data/movies.csv ]; then cp data/movies.csv .; fi
+      - name: Run legacy demos
+        run: |
+          set -e
+          for f in src/nlp_project/legacy/*.py; do
+            echo ">>> Running $f"
+            python "$f" || exit 1
+          done
diff --git a/scripts/download_nltk.py b/scripts/download_nltk.py
new file mode 100644
index 0000000..2222222
--- /dev/null
+++ b/scripts/download_nltk.py
@@ -0,0 +1,25 @@
+#!/usr/bin/env python3
+import nltk
+
+# Corpora & models needed by the legacy demos
+PACKAGES = [
+    "punkt",
+    "punkt_tab",  # present on newer NLTK; ignore if missing
+    "wordnet",
+    "stopwords",
+    "brown",
+    "reuters",
+    "webtext",
+    "omw-1.4",
+    # Taggers (names vary by NLTK version)
+    "averaged_perceptron_tagger",
+    "averaged_perceptron_tagger_eng",
+]
+
+def safe_download(pkg: str):
+    try:
+        nltk.download(pkg, quiet=True)
+        print("Downloaded:", pkg)
+    except Exception as e:
+        print("Skip", pkg, "=>", e)
+
+for p in PACKAGES: safe_download(p)
+print("NLTK bootstrap complete.")
